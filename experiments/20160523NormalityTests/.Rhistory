q()
shapiro.test(runif(100, min = 2, max = 4))
shapiro.test(runif(100, min = 2, max = 2))
shapiro.test(runif(100, min = 2, max = 2.2))
shapiro.test(runif(100, min = 2, max = 10))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean 170, sd=19)
shapiro.test(rnorm(100, mean 170, sd=19))
shapiro.test(rnorm(100, mean =170, sd=19))
shapiro.test(runif(100, min = 2, max = 10))
set.seed(125)
muestra <- rnorm(n=100, mean=170, sd=19)
plot(density(muestra))
plot(density(muestra))
plot(density(muestra))
plot(density(muestra))
shapiro.test(muestra)
clear
cls
cls
set.seed(345)
muestra <- rchisq(n=100, df=2)
plot(density(muestra))
shapiro.test(muestra)
q()
getwd()
setwd("C:\Users\arlese.rodriguezp\Documents\NetBeansProjects\networkSimUN\experiments\20160523NormalityTests")
setwd("C:/Users/arlese.rodriguezp/Documents/NetBeansProjects/networkSimUN/experiments/20160523NormalityTests")
getwd()
mydata = read.table(" mydata = read.table("mydata.txt"
 mydata = read.table("smallworld+v+100+beta+0.1+degree+2.ranking")
mydata
mydata -> V1
v1
V1
mydata
data <- mydata[ ,1]
data
shapiro.test(data)
 mydata = read.table("scalefree+sn+4+eta+1+numSt+97.ranking")
data <- mydata[ ,1]
shapiro.test(data)
 mydata = read.table("foresthubandspoke+v+100+clusters+4.graphstats")
 mydata = read.table("foresthubandspoke+v+100+clusters+4.ranking")
data <- mydata[ ,1]
shapiro.test(data)
shapiro.test(runif(100, min = 2, max = 4))
shapiro.test(runif(100, min = 2, max = 4))x|shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 5, sd = 3))
hist(data)
plot(density(data))
data
plot(density(data))
 mydata = read.table("scalefree+sn+4+eta+1+numSt+97.ranking")}
 mydata = read.table("scalefree+sn+4+eta+1+numSt+97.ranking")
data = mydata[ ,1]
plot(density(mydata))
plot(density(data))
data <- mydata[ ,1]
plot(density(data))
 mydata = read.table("foresthubandspoke+v+100+clusters+4.graphstats")
 mydata = read.table("foresthubandspoke+v+100+clusters+4.ranking")
data <- mydata[ ,1]
plot(density(data))
 mydata = read.table("scalefree+sn+4+eta+1+numSt+97.ranking")
data <- mydata[ ,1]
shapiro.test(data)
 mydata = read.table("community+v+100+beta+0.1+degree+4+clusters+4.ranking")
shapiro.test(mydata[ ,1])
plot(density((mydata[ ,1]))
;
plot(density((mydata[ ,1])))
 mydata = read.table("smallworld+v+100+beta+0.ranking")
 mydata = read.table("smallworld+v+100+beta+0.5+degree+2.ranking");
shapiro.test(mydata[ ,1])
plot(density(data)))
plot(density(data))
plot(density(mydata[ ,1]))
hist(data)
hist(mydata[,-1])
hist(mydata[,1])
hist(mydata[,1])
 mydata = read.table("scalefree+sn+4+eta+1+numSt+97.ranking")
hist(mydata[,1])
 mydata = read.table("community+v+100+beta+0.1+degree+4+clusters+4.ranking")
hist(mydata[,1])
bootstrap_p(mydata[ ,1])
bootstrap_p(mydata[ ,1])
library("poweRlaw")
library("poweRlaw")
install.packages("poweRlaw")
devtools::install_github("csgillespie/poweRlaw", sub="pkg")
install.packages("devtools")
q()
